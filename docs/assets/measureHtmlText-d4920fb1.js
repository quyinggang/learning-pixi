import{o,w as h}from"./index-71e254cb.js";import{T as S,g as $,C as v}from"./TextStyle-8283246b.js";function y(t){const e=t._stroke,i=t._fill,r=[`div { ${[`color: ${o.shared.setValue(i.color).toHex()}`,`font-size: ${t.fontSize}px`,`font-family: ${t.fontFamily}`,`font-weight: ${t.fontWeight}`,`font-style: ${t.fontStyle}`,`font-variant: ${t.fontVariant}`,`letter-spacing: ${t.letterSpacing}px`,`text-align: ${t.align}`,`padding: ${t.padding}px`,`white-space: ${t.whiteSpace==="pre"&&t.wordWrap?"pre-wrap":t.whiteSpace}`,...t.lineHeight?[`line-height: ${t.lineHeight}px`]:[],...t.wordWrap?[`word-wrap: ${t.breakWords?"break-all":"break-word"}`,`max-width: ${t.wordWrapWidth}px`]:[],...e?[w(e)]:[],...t.dropShadow?[u(t.dropShadow)]:[],...t.cssOverrides].join(";")} }`];return b(t.tagStyles,r),r.join(" ")}function u(t){const e=o.shared.setValue(t.color).setAlpha(t.alpha).toHexa(),i=Math.round(Math.cos(t.angle)*t.distance),s=Math.round(Math.sin(t.angle)*t.distance),r=`${i}px ${s}px`;return t.blur>0?`text-shadow: ${r} ${t.blur}px ${e}`:`text-shadow: ${r} ${e}`}function w(t){return[`-webkit-text-stroke-width: ${t.width}px`,`-webkit-text-stroke-color: ${o.shared.setValue(t.color).toHex()}`,`text-stroke-width: ${t.width}px`,`text-stroke-color: ${o.shared.setValue(t.color).toHex()}`,"paint-order: stroke"].join(";")}const c={fontSize:"font-size: {{VALUE}}px",fontFamily:"font-family: {{VALUE}}",fontWeight:"font-weight: {{VALUE}}",fontStyle:"font-style: {{VALUE}}",fontVariant:"font-variant: {{VALUE}}",letterSpacing:"letter-spacing: {{VALUE}}px",align:"text-align: {{VALUE}}",padding:"padding: {{VALUE}}px",whiteSpace:"white-space: {{VALUE}}",lineHeight:"line-height: {{VALUE}}px",wordWrapWidth:"max-width: {{VALUE}}px"},l={fill:t=>`color: ${o.shared.setValue(t).toHex()}`,breakWords:t=>`word-wrap: ${t?"break-all":"break-word"}`,stroke:w,dropShadow:u};function b(t,e){for(const i in t){const s=t[i],r=[];for(const n in s)l[n]?r.push(l[n](s[n])):c[n]&&r.push(c[n].replace("{{VALUE}}",s[n]));e.push(`${i} { ${r.join(";")} }`)}}class m extends S{constructor(e={}){super(e),this._cssOverrides=[],this.cssOverrides??(this.cssOverrides=e.cssOverrides),this.tagStyles=e.tagStyles??{}}set cssOverrides(e){this._cssOverrides=e instanceof Array?e:[e],this.update()}get cssOverrides(){return this._cssOverrides}_generateKey(){return this._styleKey=$(this)+this._cssOverrides.join("-"),this._styleKey}update(){this._cssStyle=null,super.update()}clone(){return new m({align:this.align,breakWords:this.breakWords,dropShadow:this.dropShadow,fill:this._fill,fontFamily:this.fontFamily,fontSize:this.fontSize,fontStyle:this.fontStyle,fontVariant:this.fontVariant,fontWeight:this.fontWeight,letterSpacing:this.letterSpacing,lineHeight:this.lineHeight,padding:this.padding,stroke:this._stroke,whiteSpace:this.whiteSpace,wordWrap:this.wordWrap,wordWrapWidth:this.wordWrapWidth,cssOverrides:this.cssOverrides})}get cssStyle(){return this._cssStyle||(this._cssStyle=y(this)),this._cssStyle}addOverride(...e){const i=e.filter(s=>!this.cssOverrides.includes(s));i.length>0&&(this.cssOverrides.push(...i),this.update())}removeOverride(...e){const i=e.filter(s=>this.cssOverrides.includes(s));i.length>0&&(this.cssOverrides=this.cssOverrides.filter(s=>!i.includes(s)),this.update())}set fill(e){typeof e!="string"&&typeof e!="number"&&h("[HTMLTextStyle] only color fill is not supported by HTMLText"),super.fill=e}set stroke(e){e&&typeof e!="string"&&typeof e!="number"&&h("[HTMLTextStyle] only color stroke is not supported by HTMLText"),super.stroke=e}}const p="http://www.w3.org/2000/svg",f="http://www.w3.org/1999/xhtml";class k{constructor(){this.svgRoot=document.createElementNS(p,"svg"),this.foreignObject=document.createElementNS(p,"foreignObject"),this.domElement=document.createElementNS(f,"div"),this.styleElement=document.createElementNS(f,"style"),this.image=new Image;const{foreignObject:e,svgRoot:i,styleElement:s,domElement:r}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",i.appendChild(e),e.appendChild(s),e.appendChild(r)}}let g;function T(t,e,i,s){s=s||g||(g=new k);const{domElement:r,styleElement:n,svgRoot:a}=s;r.innerHTML=`<style>${e.cssStyle}</style><div>${t}</div>`,r.setAttribute("style","transform-origin: top left; display: inline-block"),i&&(n.textContent=i),document.body.appendChild(a);const d=r.getBoundingClientRect();a.remove();const x=v.measureFont(e.fontStyle).descent;return{width:d.width,height:d.height+x}}export{m as H,k as a,T as m};
