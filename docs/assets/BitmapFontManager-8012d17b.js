import{T as z,c as P,M as A,K,N as $,w as Y,e as N,d as S,v,R as X,I as G,i as _}from"./index-19f7f59e.js";import{f as k,C as b,T as W}from"./TextStyle-78f8ae7d.js";import{C as I}from"./CanvasPool-f94e9513.js";function L(o,t){if(o.texture===z.WHITE&&!o.fill)return P.shared.setValue(o.color).toHex();if(o.fill){if(o.fill instanceof K){const e=o.fill,s=t.createPattern(e.texture.source.resource,"repeat"),i=e.transform.copyTo(A.shared);return i.scale(e.texture.frame.width,e.texture.frame.height),s.setTransform(i),s}else if(o.fill instanceof $){const e=o.fill;if(e.type==="linear"){const s=t.createLinearGradient(e.x0,e.y0,e.x1,e.y1);return e.gradientStops.forEach(i=>{s.addColorStop(i.offset,P.shared.setValue(i.color).toHex())}),s}}}else{const e=t.createPattern(o.texture.source.resource,"repeat"),s=o.matrix.copyTo(A.shared);return s.scale(o.texture.frame.width,o.texture.frame.height),e.setTransform(s),e}return Y("FillStyle not recognised",o),"red"}class U extends N{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return S(v,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return S(v,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return S(v,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return S(v,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return S(v,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(t=!1){this.emit("destroy",this),this.removeAllListeners();for(const e in this.chars)this.chars[e].texture.destroy();this.chars=null,t&&(this.pages.forEach(e=>e.texture.destroy(!0)),this.pages=null)}}function H(o){if(o==="")return[];typeof o=="string"&&(o=[o]);const t=[];for(let e=0,s=o.length;e<s;e++){const i=o[e];if(Array.isArray(i)){if(i.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${i.length}.`);if(i[0].length===0||i[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const r=i[0].charCodeAt(0),a=i[1].charCodeAt(0);if(a<r)throw new Error("[BitmapFont]: Invalid character range.");for(let n=r,d=a;n<=d;n++)t.push(String.fromCharCode(n))}else t.push(...Array.from(i))}if(t.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return t}class O extends U{constructor(t){super(),this.resolution=1,this.pages=[],this._padding=4,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const e=t,s=e.style.clone();e.overrideFill&&(s._fill.color=16777215,s._fill.alpha=1,s._fill.texture=z.WHITE,s._fill.fill=null);const i=s.fontSize;s.fontSize=this.baseMeasurementFontSize;const r=k(s);e.overrideSize?s._stroke&&(s._stroke.width*=this.baseRenderedFontSize/i):s.fontSize=this.baseRenderedFontSize=i,this._style=s,this._skipKerning=e.skipKerning??!1,this.resolution=e.resolution??1,this._padding=e.padding??4,this.fontMetrics=b.measureFont(r),this.lineHeight=s.lineHeight||this.fontMetrics.fontSize||s.fontSize}ensureCharacters(t){var u,x;const e=H(t).filter(F=>!this._currentChars.includes(F)).filter((F,g,m)=>m.indexOf(F)===g);if(!e.length)return;this._currentChars=[...this._currentChars,...e];let s;this._currentPageIndex===-1?s=this._nextPage():s=this.pages[this._currentPageIndex];let{canvas:i,context:r}=s.canvasAndContext,a=s.texture.source;const n=this._style;let d=this._currentX,h=this._currentY;const c=this.baseRenderedFontSize/this.baseMeasurementFontSize,p=this._padding*c,w=n.fontStyle==="italic"?2:1;let f=0,l=!1;for(let F=0;F<e.length;F++){const g=e[F],m=b.measureText(g,n,i,!1);m.lineHeight=m.height;const C=w*m.width*c,E=m.height*c,B=C+p*2,M=E+p*2;if(l=!1,g!==`
`&&g!=="\r"&&g!=="	"&&g!==" "&&(l=!0,f=Math.ceil(Math.max(M,f))),d+B>512&&(h+=f,f=M,d=0,h+f>512)){a.update();const y=this._nextPage();i=y.canvasAndContext.canvas,r=y.canvasAndContext.context,a=y.texture.source,h=0}const R=C/c-(((u=n.dropShadow)==null?void 0:u.distance)??0)-(((x=n._stroke)==null?void 0:x.width)??0);if(this.chars[g]={id:g.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:R,kerning:{}},l){this._drawGlyph(r,m,d+p,h+p,c,n);const y=a.width*c,T=a.height*c,j=new X(d/y*a.width,h/T*a.height,B/y*a.width,M/T*a.height);this.chars[g].texture=new z({source:a,frame:j}),d+=Math.ceil(B)}}a.update(),this._currentX=d,this._currentY=h,this._skipKerning&&this._applyKerning(e,r)}get pageTextures(){return S(v,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(t,e){const s=this._measureCache;for(let i=0;i<t.length;i++){const r=t[i];for(let a=0;a<this._currentChars.length;a++){const n=this._currentChars[a];let d=s[r];d||(d=s[r]=e.measureText(r).width);let h=s[n];h||(h=s[n]=e.measureText(n).width);let c=e.measureText(r+n).width,p=c-(d+h);p&&(this.chars[r].kerning[n]=p),c=e.measureText(r+n).width,p=c-(d+h),p&&(this.chars[n].kerning[r]=p)}}}_nextPage(){this._currentPageIndex++;const t=this.resolution,e=I.getOptimalCanvasAndContext(512,512,t);this._setupContext(e.context,this._style,t);const s=t*(this.baseRenderedFontSize/this.baseMeasurementFontSize),i=new z({source:new G({resource:e.canvas,resolution:s,alphaMode:"premultiply-alpha-on-upload"})}),r={canvasAndContext:e,texture:i};return this.pages[this._currentPageIndex]=r,r}_setupContext(t,e,s){e.fontSize=this.baseRenderedFontSize,t.scale(s,s),t.font=k(e),e.fontSize=this.baseMeasurementFontSize,t.textBaseline=e.textBaseline;const i=e._stroke,r=(i==null?void 0:i.width)??0;if(i&&(t.lineWidth=r,t.lineJoin=i.join,t.miterLimit=i.miterLimit,t.strokeStyle=L(i,t)),e._fill&&(t.fillStyle=L(e._fill,t)),e.dropShadow){const a=e.dropShadow,n=P.shared.setValue(a.color).toArray(),d=a.blur*s,h=a.distance*s;t.shadowColor=`rgba(${n[0]*255},${n[1]*255},${n[2]*255},${a.alpha})`,t.shadowBlur=d,t.shadowOffsetX=Math.cos(a.angle)*h,t.shadowOffsetY=Math.sin(a.angle)*h}else t.shadowColor="black",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0}_drawGlyph(t,e,s,i,r,a){const n=e.text,d=e.fontProperties,h=a._stroke,c=((h==null?void 0:h.width)??0)*r,p=s+c/2,w=i-c/2,f=d.descent*r,l=e.lineHeight*r;a.stroke&&c&&t.strokeText(n,p,w+l-f),a._fill&&t.fillText(n,p,w+l-f)}destroy(){super.destroy();for(let t=0;t<this.pages.length;t++){const{canvasAndContext:e,texture:s}=this.pages[t];I.returnCanvasAndContext(e),s.destroy(!0)}this.pages=null}}function V(o,t,e){const s={width:0,height:0,offsetY:0,scale:t.fontSize/e.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};s.offsetY=e.baseLineOffset;let i=s.lines[0],r=null,a=!0;const n={spaceWord:!1,width:0,start:0,index:0,positions:[],chars:[]},d=f=>{const l=i.width;for(let u=0;u<n.index;u++){const x=f.positions[u];i.chars.push(f.chars[u]),i.charPositions.push(x+l)}i.width+=f.width,a=!1,n.width=0,n.index=0,n.chars.length=0},h=()=>{let f=i.chars.length-1,l=i.chars[f];for(;l===" ";)i.width-=e.chars[l].xAdvance,l=i.chars[--f];s.width=Math.max(s.width,i.width),i={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},a=!0,s.lines.push(i),s.height+=e.lineHeight},c=e.baseMeasurementFontSize/t.fontSize,p=t.letterSpacing*c,w=t.wordWrapWidth*c;for(let f=0;f<o.length+1;f++){let l;const u=f===o.length;u||(l=o[f]);const x=e.chars[l]||e.chars[" "];if(/(?:\s)/.test(l)||l==="\r"||l===`
`||u){if(!a&&t.wordWrap&&i.width+n.width-p>w?(h(),d(n),u||i.charPositions.push(0)):(n.start=i.width,d(n),u||i.charPositions.push(0)),l==="\r"||l===`
`)i.width!==0&&h();else if(!u){const C=x.xAdvance+(x.kerning[r]||0)+p;i.width+=C,i.spaceWidth=C,i.spacesIndex.push(i.charPositions.length),i.chars.push(l)}}else{const m=x.kerning[r]||0,C=x.xAdvance+m+p;n.positions[n.index++]=n.width+m,n.chars.push(l),n.width+=C}r=l}return h(),t.align==="center"?q(s):t.align==="right"?J(s):t.align==="justify"&&Z(s),s}function q(o){for(let t=0;t<o.lines.length;t++){const e=o.lines[t],s=o.width/2-e.width/2;for(let i=0;i<e.charPositions.length;i++)e.charPositions[i]+=s}}function J(o){for(let t=0;t<o.lines.length;t++){const e=o.lines[t],s=o.width-e.width;for(let i=0;i<e.charPositions.length;i++)e.charPositions[i]+=s}}function Z(o){const t=o.width;for(let e=0;e<o.lines.length;e++){const s=o.lines[e];let i=0,r=s.spacesIndex[i++],a=0;const n=s.spacesIndex.length,h=(t-s.width)/n;for(let c=0;c<s.charPositions.length;c++)c===r&&(r=s.spacesIndex[i++],a+=h),s.charPositions[c]+=a}}class D{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(t,e){var a;let s=`${e.fontFamily}-bitmap`,i=!0;if(e._fill.fill&&(s+=e._fill.fill.uid,i=!1),!_.has(s)){const n=new O({style:e,overrideFill:i,overrideSize:!0,...this.defaultOptions});n.once("destroy",()=>_.remove(s)),_.set(s,n)}const r=_.get(s);return(a=r.ensureCharacters)==null||a.call(r,t),r}getLayout(t,e){const s=this.getFont(t,e);return V(t.split(""),e,s)}measureText(t,e){return this.getLayout(t,e)}install(...t){var h,c,p,w;let e=t[0];typeof e=="string"&&(e={name:e,style:t[1],chars:(h=t[2])==null?void 0:h.chars,resolution:(c=t[2])==null?void 0:c.resolution,padding:(p=t[2])==null?void 0:p.padding,skipKerning:(w=t[2])==null?void 0:w.skipKerning},S(v,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const s=e==null?void 0:e.name;if(!s)throw new Error("[BitmapFontManager] Property `name` is required.");e={...this.defaultOptions,...e};const i=e.style,r=i instanceof W?i:new W(i),a=r._fill.fill!==null&&r._fill.fill!==void 0,n=new O({style:r,overrideFill:a,skipKerning:e.skipKerning,padding:e.padding,resolution:e.resolution,overrideSize:!1}),d=H(e.chars);return n.ensureCharacters(d.join("")),_.set(`${s}-bitmap`,n),n.once("destroy",()=>_.remove(`${s}-bitmap`)),n}uninstall(t){const e=`${t}-bitmap`,s=_.get(e);s&&(_.remove(e),s.destroy())}}const se=new D;export{U as A,se as B,L as a,V as g};
