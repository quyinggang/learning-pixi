import{T as P,y as B,M as A,H as K,J as G,w as $,m as N,d as _,v as C,R as U,I as J,c as F}from"./index-0d465778.js";import{f as T,C as k,T as W}from"./TextStyle-b7e5389e.js";import{C as I}from"./CanvasPool-1d4adb8f.js";import{M as V}from"./MeshGeometry-b3bd6ca3.js";function X(o,t){if(o.texture===P.WHITE&&!o.fill)return B.shared.setValue(o.color).toHex();if(o.fill){if(o.fill instanceof K){const e=o.fill,s=t.createPattern(e.texture.source.resource,"repeat"),i=e.transform.copyTo(A.shared);return i.scale(e.texture.frame.width,e.texture.frame.height),s.setTransform(i),s}else if(o.fill instanceof G){const e=o.fill;if(e.type==="linear"){const s=t.createLinearGradient(e.x0,e.y0,e.x1,e.y1);return e.gradientStops.forEach(i=>{s.addColorStop(i.offset,B.shared.setValue(i.color).toHex())}),s}}}else{const e=t.createPattern(o.texture.source.resource,"repeat"),s=o.matrix.copyTo(A.shared);return s.scale(o.texture.frame.width,o.texture.frame.height),e.setTransform(s),e}return $("FillStyle not recognised",o),"red"}class q extends N{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return _(C,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return _(C,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return _(C,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return _(C,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return _(C,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(t=!1){this.emit("destroy",this),this.removeAllListeners();for(const e in this.chars)this.chars[e].texture.destroy();this.chars=null,t&&(this.pages.forEach(e=>e.texture.destroy(!0)),this.pages=null)}}function L(o){if(o==="")return[];typeof o=="string"&&(o=[o]);const t=[];for(let e=0,s=o.length;e<s;e++){const i=o[e];if(Array.isArray(i)){if(i.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${i.length}.`);if(i[0].length===0||i[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const a=i[0].charCodeAt(0),r=i[1].charCodeAt(0);if(r<a)throw new Error("[BitmapFont]: Invalid character range.");for(let n=a,u=r;n<=u;n++)t.push(String.fromCharCode(n))}else t.push(...Array.from(i))}if(t.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return t}class O extends q{constructor(t){super(),this.resolution=1,this.pages=[],this._padding=4,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const e=t,s=e.style.clone();e.overrideFill&&(s._fill.color=16777215,s._fill.alpha=1,s._fill.texture=P.WHITE,s._fill.fill=null);const i=s.fontSize;s.fontSize=this.baseMeasurementFontSize;const a=T(s);e.overrideSize?s._stroke&&(s._stroke.width*=this.baseRenderedFontSize/i):s.fontSize=this.baseRenderedFontSize=i,this._style=s,this._skipKerning=e.skipKerning??!1,this.resolution=e.resolution??1,this._padding=e.padding??4,this.fontMetrics=k.measureFont(a),this.lineHeight=s.lineHeight||this.fontMetrics.fontSize||s.fontSize}ensureCharacters(t){var g,m;const e=L(t).filter(v=>!this._currentChars.includes(v)).filter((v,w,x)=>x.indexOf(v)===w);if(!e.length)return;this._currentChars=[...this._currentChars,...e];let s;this._currentPageIndex===-1?s=this._nextPage():s=this.pages[this._currentPageIndex];let{canvas:i,context:a}=s.canvasAndContext,r=s.texture.source;const n=this._style;let u=this._currentX,c=this._currentY;const d=this.baseRenderedFontSize/this.baseMeasurementFontSize,h=this._padding*d,p=n.fontStyle==="italic"?2:1;let l=0,f=!1;for(let v=0;v<e.length;v++){const w=e[v],x=k.measureText(w,n,i,!1);x.lineHeight=x.height;const y=p*x.width*d,E=x.height*d,b=y+h*2,z=E+h*2;if(f=!1,w!==`
`&&w!=="\r"&&w!=="	"&&w!==" "&&(f=!0,l=Math.ceil(Math.max(z,l))),u+b>512&&(c+=l,l=z,u=0,c+l>512)){r.update();const S=this._nextPage();i=S.canvasAndContext.canvas,a=S.canvasAndContext.context,r=S.texture.source,c=0}const R=y/d-(((g=n.dropShadow)==null?void 0:g.distance)??0)-(((m=n._stroke)==null?void 0:m.width)??0);if(this.chars[w]={id:w.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:R,kerning:{}},f){this._drawGlyph(a,x,u+h,c+h,d,n);const S=r.width*d,M=r.height*d,j=new U(u/S*r.width,c/M*r.height,b/S*r.width,z/M*r.height);this.chars[w].texture=new P({source:r,frame:j}),u+=Math.ceil(b)}}r.update(),this._currentX=u,this._currentY=c,this._skipKerning&&this._applyKerning(e,a)}get pageTextures(){return _(C,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(t,e){const s=this._measureCache;for(let i=0;i<t.length;i++){const a=t[i];for(let r=0;r<this._currentChars.length;r++){const n=this._currentChars[r];let u=s[a];u||(u=s[a]=e.measureText(a).width);let c=s[n];c||(c=s[n]=e.measureText(n).width);let d=e.measureText(a+n).width,h=d-(u+c);h&&(this.chars[a].kerning[n]=h),d=e.measureText(a+n).width,h=d-(u+c),h&&(this.chars[n].kerning[a]=h)}}}_nextPage(){this._currentPageIndex++;const t=this.resolution,e=I.getOptimalCanvasAndContext(512,512,t);this._setupContext(e.context,this._style,t);const s=t*(this.baseRenderedFontSize/this.baseMeasurementFontSize),i=new P({source:new J({resource:e.canvas,resolution:s,alphaMode:"premultiply-alpha-on-upload"})}),a={canvasAndContext:e,texture:i};return this.pages[this._currentPageIndex]=a,a}_setupContext(t,e,s){e.fontSize=this.baseRenderedFontSize,t.scale(s,s),t.font=T(e),e.fontSize=this.baseMeasurementFontSize,t.textBaseline=e.textBaseline;const i=e._stroke,a=(i==null?void 0:i.width)??0;if(i&&(t.lineWidth=a,t.lineJoin=i.join,t.miterLimit=i.miterLimit,t.strokeStyle=X(i,t)),e._fill&&(t.fillStyle=X(e._fill,t)),e.dropShadow){const r=e.dropShadow,n=B.shared.setValue(r.color).toArray(),u=r.blur*s,c=r.distance*s;t.shadowColor=`rgba(${n[0]*255},${n[1]*255},${n[2]*255},${r.alpha})`,t.shadowBlur=u,t.shadowOffsetX=Math.cos(r.angle)*c,t.shadowOffsetY=Math.sin(r.angle)*c}else t.shadowColor="black",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0}_drawGlyph(t,e,s,i,a,r){const n=e.text,u=e.fontProperties,c=r._stroke,d=((c==null?void 0:c.width)??0)*a,h=s+d/2,p=i-d/2,l=u.descent*a,f=e.lineHeight*a;r.stroke&&d&&t.strokeText(n,h,p+f-l),r._fill&&t.fillText(n,h,p+f-l)}destroy(){super.destroy();for(let t=0;t<this.pages.length;t++){const{canvasAndContext:e,texture:s}=this.pages[t];I.returnCanvasAndContext(e),s.destroy(!0)}this.pages=null}}function Z(o,t,e){const s={width:0,height:0,offsetY:0,scale:t.fontSize/e.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};s.offsetY=e.baseLineOffset;let i=s.lines[0],a=null,r=!0;const n={spaceWord:!1,width:0,start:0,index:0,positions:[],chars:[]},u=l=>{const f=i.width;for(let g=0;g<n.index;g++){const m=l.positions[g];i.chars.push(l.chars[g]),i.charPositions.push(m+f)}i.width+=l.width,r=!1,n.width=0,n.index=0,n.chars.length=0},c=()=>{let l=i.chars.length-1,f=i.chars[l];for(;f===" ";)i.width-=e.chars[f].xAdvance,f=i.chars[--l];s.width=Math.max(s.width,i.width),i={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},r=!0,s.lines.push(i),s.height+=e.lineHeight},d=e.baseMeasurementFontSize/t.fontSize,h=t.letterSpacing*d,p=t.wordWrapWidth*d;for(let l=0;l<o.length+1;l++){let f;const g=l===o.length;g||(f=o[l]);const m=e.chars[f]||e.chars[" "];if(/(?:\s)/.test(f)||f==="\r"||f===`
`||g){if(!r&&t.wordWrap&&i.width+n.width-h>p?(c(),u(n),g||i.charPositions.push(0)):(n.start=i.width,u(n),g||i.charPositions.push(0)),f==="\r"||f===`
`)i.width!==0&&c();else if(!g){const y=m.xAdvance+(m.kerning[a]||0)+h;i.width+=y,i.spaceWidth=y,i.spacesIndex.push(i.charPositions.length),i.chars.push(f)}}else{const x=m.kerning[a]||0,y=m.xAdvance+x+h;n.positions[n.index++]=n.width+x,n.chars.push(f),n.width+=y}a=f}return c(),t.align==="center"?D(s):t.align==="right"?Q(s):t.align==="justify"&&ee(s),s}function D(o){for(let t=0;t<o.lines.length;t++){const e=o.lines[t],s=o.width/2-e.width/2;for(let i=0;i<e.charPositions.length;i++)e.charPositions[i]+=s}}function Q(o){for(let t=0;t<o.lines.length;t++){const e=o.lines[t],s=o.width-e.width;for(let i=0;i<e.charPositions.length;i++)e.charPositions[i]+=s}}function ee(o){const t=o.width;for(let e=0;e<o.lines.length;e++){const s=o.lines[e];let i=0,a=s.spacesIndex[i++],r=0;const n=s.spacesIndex.length,c=(t-s.width)/n;for(let d=0;d<s.charPositions.length;d++)d===a&&(a=s.spacesIndex[i++],r+=c),s.charPositions[d]+=r}}class te{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(t,e){var r;let s=`${e.fontFamily}-bitmap`,i=!0;if(e._fill.fill&&(s+=e._fill.fill.uid,i=!1),!F.has(s)){const n=new O({style:e,overrideFill:i,overrideSize:!0,...this.defaultOptions});n.once("destroy",()=>F.remove(s)),F.set(s,n)}const a=F.get(s);return(r=a.ensureCharacters)==null||r.call(a,t),a}getLayout(t,e){const s=this.getFont(t,e);return Z(t.split(""),e,s)}measureText(t,e){return this.getLayout(t,e)}install(...t){var c,d,h,p;let e=t[0];typeof e=="string"&&(e={name:e,style:t[1],chars:(c=t[2])==null?void 0:c.chars,resolution:(d=t[2])==null?void 0:d.resolution,padding:(h=t[2])==null?void 0:h.padding,skipKerning:(p=t[2])==null?void 0:p.skipKerning},_(C,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const s=e==null?void 0:e.name;if(!s)throw new Error("[BitmapFontManager] Property `name` is required.");e={...this.defaultOptions,...e};const i=e.style,a=i instanceof W?i:new W(i),r=a._fill.fill!==null&&a._fill.fill!==void 0,n=new O({style:a,overrideFill:r,skipKerning:e.skipKerning,padding:e.padding,resolution:e.resolution,overrideSize:!1}),u=L(e.chars);return n.ensureCharacters(u.join("")),F.set(`${s}-bitmap`,n),n.once("destroy",()=>F.remove(`${s}-bitmap`)),n}uninstall(t){const e=`${t}-bitmap`,s=F.get(e);s&&(F.remove(e),s.destroy())}}const ae=new te,Y=class H extends V{constructor(...t){super({});let e=t[0]??{};typeof e=="number"&&(_(C,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),e={width:e,height:t[1],verticesX:t[2],verticesY:t[3]}),this.build(e)}build(t){t={...H.defaultOptions,...t},this.verticesX=this.verticesX??t.verticesX,this.verticesY=this.verticesY??t.verticesY,this.width=this.width??t.width,this.height=this.height??t.height;const e=this.verticesX*this.verticesY,s=[],i=[],a=[],r=this.verticesX-1,n=this.verticesY-1,u=this.width/r,c=this.height/n;for(let h=0;h<e;h++){const p=h%this.verticesX,l=h/this.verticesX|0;s.push(p*u,l*c),i.push(p/r,l/n)}const d=r*n;for(let h=0;h<d;h++){const p=h%r,l=h/r|0,f=l*this.verticesX+p,g=l*this.verticesX+p+1,m=(l+1)*this.verticesX+p,v=(l+1)*this.verticesX+p+1;a.push(f,g,m,g,v,m)}this.buffers[0].data=new Float32Array(s),this.buffers[1].data=new Float32Array(i),this.indexBuffer.data=new Uint32Array(a),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};Y.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let oe=Y;export{q as A,ae as B,oe as P,X as a,Z as g};
