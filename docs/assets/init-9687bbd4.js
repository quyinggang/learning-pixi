import{E as b,U as it,g as he,j as $,M as A,k as ye,l as we,w as se,T as M,P as nt,B as ve,d as k,v as G,m as q,n as H,o as j,F as at,q as ot,h as ct,s as K,I as lt,b as F,t as B,u as ht,D as O,L as dt,p as V,x as ut,y as de,z as ee,H as ue,f as P,J as ft}from"./index-b27a38ca.js";import{U as L,T as R,R as ie,S as Se,b as Ce}from"./TexturePool-3d42cdc4.js";import{c as ne,a as Be,b as Pe,l as pt,r as Fe,d as gt,e as Me,f as mt,g as xt,h as _t,i as bt,B as Re}from"./colorToUniform-64d749ee.js";import{C as D}from"./CanvasPool-09995a28.js";import{f as te,C as I,T as fe}from"./TextStyle-0ba7dbf0.js";import{G as Tt}from"./Graphics-1bb95f5c.js";import{b as yt}from"./batchSamplersUniformGroup-35adca58.js";import{a as wt,H as vt,m as St}from"./measureHtmlText-346f442e.js";class Ae{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:s,clientHeight:i}=this._resizeTo;t=s,r=i}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}Ae.extension=b.Application;class Ue{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,it.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?he.shared:new he,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}Ue.extension=b.Application;class ke{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}ke.extension={type:[b.WebGLPipes,b.WebGPUPipes,b.CanvasPipes],name:"filter"};const Ct=new A;function Bt(a,e){return e.clear(),Ge(a,e),e.isValid||e.set(0,0,0,0),a.isRenderGroupRoot?e.applyMatrix(a.renderGroup.localTransform):e.applyMatrix(a.renderGroup.worldTransform),e}function Ge(a,e){if(a.localDisplayStatus!==7||!a.measurable)return;const t=!!a.effects.length;let r=e;if((a.isRenderGroupRoot||t)&&(r=$.get().clear()),a.boundsArea)e.addRect(a.boundsArea,a.worldTransform);else{if(a.renderPipeId){const i=a.bounds;r.addFrame(i.minX,i.minY,i.maxX,i.maxY,a.groupTransform)}const s=a.children;for(let i=0;i<s.length;i++)Ge(s[i],r)}if(t){let s=!1;for(let i=0;i<a.effects.length;i++)a.effects[i].addBounds&&(s||(s=!0,r.applyMatrix(a.renderGroup.worldTransform)),a.effects[i].addBounds(r,!0));s&&(r.applyMatrix(a.renderGroup.worldTransform.copyTo(Ct).invert()),e.addBounds(r,a.relativeGroupTransform)),e.addBounds(r),$.return(r)}else a.isRenderGroupRoot&&(e.addBounds(r,a.relativeGroupTransform),$.return(r))}function Pt(a,e){e.clear();const t=e.matrix;for(let r=0;r<a.length;r++){const s=a[r];s.globalDisplayStatus<7||(e.matrix=s.worldTransform,s.addBounds(e))}return e.matrix=t,e}const Ft=new ye({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),location:0,format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class ze{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new L({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new we({}),this.renderer=e}get activeBackTexture(){var e;return(e=this._activeFilterData)==null?void 0:e.backTexture}push(e){var f;const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const s=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){s.skip=!0;return}const i=s.bounds;e.renderables?Pt(e.renderables,i):e.filterEffect.filterArea?(i.clear(),i.addRect(e.filterEffect.filterArea),i.applyMatrix(e.container.worldTransform)):Bt(e.container,i);const n=t.renderTarget.rootRenderTarget.colorTexture.source;let o=n._resolution,c=0,h=n.antialias,l=!1,d=!1;for(let p=0;p<r.length;p++){const g=r[p];if(o=Math.min(o,g.resolution),c+=g.padding,g.antialias!=="inherit"&&(g.antialias==="on"?h=!0:h=!1),!!!(g.compatibleRenderers&t.type)){d=!1;break}if(g.blendRequired&&!(((f=t.backBuffer)==null?void 0:f.useBackBuffer)??!0)){se("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),d=!1;break}d=g.enabled||d,l=l||g.blendRequired}if(!d){s.skip=!0;return}const u=t.renderTarget.rootViewPort;if(i.scale(o).fitBounds(0,u.width,0,u.height).scale(1/o).pad(c).ceil(),!i.isPositive){s.skip=!0;return}s.skip=!1,s.bounds=i,s.blendRequired=l,s.container=e.container,s.filterEffect=e.filterEffect,s.previousRenderSurface=t.renderTarget.renderSurface,s.inputTexture=R.getOptimalTexture(i.width,i.height,o,h),t.renderTarget.bind(s.inputTexture,!0),t.globalUniforms.push({offset:i})}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,s=t.bounds;let i=M.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const o=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,c=e.renderTarget.getRenderTarget(t.previousRenderSurface);i=this.getBackTexture(c,s,o)}t.backTexture=i;const n=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(i.source,3),e.globalUniforms.pop(),n.length===1)n[0].apply(this,r,t.previousRenderSurface,!1),R.returnTexture(r);else{let o=t.inputTexture,c=R.getOptimalTexture(s.width,s.height,o.source._resolution,!1),h=0;for(h=0;h<n.length-1;++h){n[h].apply(this,o,c,!0);const d=o;o=c,c=d}n[h].apply(this,o,t.previousRenderSurface,!1),R.returnTexture(o),R.returnTexture(c)}t.blendRequired&&R.returnTexture(i)}getBackTexture(e,t,r){const s=e.colorTexture.source._resolution,i=R.getOptimalTexture(t.width,t.height,s,!1);let n=t.minX,o=t.minY;r&&(n-=r.minX,o-=r.minY),n=Math.floor(n*s),o=Math.floor(o*s);const c=Math.ceil(t.width*s),h=Math.ceil(t.height*s);return this.renderer.renderTarget.copyToTexture(e,i,{x:n,y:o},{width:c,height:h},{x:0,y:0}),i}applyFilter(e,t,r,s){const i=this.renderer,n=this._filterStack[this._filterStackIndex],o=n.bounds,c=nt.shared,l=n.previousRenderSurface===r;let d=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,u=this._filterStackIndex-1;for(;u>0&&this._filterStack[u].skip;)--u;u>0&&(d=this._filterStack[u].inputTexture.source._resolution);const f=this._filterGlobalUniforms,p=f.uniforms,g=p.uOutputFrame,m=p.uInputSize,_=p.uInputPixel,x=p.uInputClamp,T=p.uGlobalFrame,y=p.uOutputTexture;if(l){let S=this._filterStackIndex;for(;S>0;){S--;const U=this._filterStack[this._filterStackIndex-1];if(!U.skip){c.x=U.bounds.minX,c.y=U.bounds.minY;break}}g[0]=o.minX-c.x,g[1]=o.minY-c.y}else g[0]=0,g[1]=0;g[2]=t.frame.width,g[3]=t.frame.height,m[0]=t.source.width,m[1]=t.source.height,m[2]=1/m[0],m[3]=1/m[1],_[0]=t.source.pixelWidth,_[1]=t.source.pixelHeight,_[2]=1/_[0],_[3]=1/_[1],x[0]=.5*_[2],x[1]=.5*_[3],x[2]=t.frame.width*m[2]-.5*_[2],x[3]=t.frame.height*m[3]-.5*_[3];const v=this.renderer.renderTarget.rootRenderTarget.colorTexture;T[0]=c.x*d,T[1]=c.y*d,T[2]=v.source.width*d,T[3]=v.source.height*d;const w=this.renderer.renderTarget.getRenderTarget(r);if(i.renderTarget.bind(r,!!s),r instanceof M?(y[0]=r.frame.width,y[1]=r.frame.height):(y[0]=w.width,y[1]=w.height),y[2]=w.isRoot?-1:1,f.update(),i.renderPipes.uniformBatch){const S=i.renderPipes.uniformBatch.getUboResource(f);this._globalFilterBindGroup.setResource(S,0)}else this._globalFilterBindGroup.setResource(f,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,i.encoder.draw({geometry:Ft,shader:e,state:e._state,topology:"triangle-list"}),i.type===ie.WEBGL&&i.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new ve,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,s=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),i=t.worldTransform.copyTo(A.shared);return i.invert(),s.prepend(i),s.scale(1/t.texture.frame.width,1/t.texture.frame.height),s.translate(t.anchor.x,t.anchor.y),s}}ze.extension={type:[b.WebGLSystem,b.WebGPUSystem],name:"filter"};const Ie=class He extends ye{constructor(...e){let t=e[0]??{};t instanceof Float32Array&&(k(G,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...He.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]),s=t.uvs||new Float32Array([0,0,1,0,1,1,0,1]),i=t.indices||new Uint32Array([0,1,2,0,2,3]),n=t.shrinkBuffersToFit,o=new q({data:r,label:"attribute-mesh-positions",shrinkToFit:n,usage:H.VERTEX|H.COPY_DST}),c=new q({data:s,label:"attribute-mesh-uvs",shrinkToFit:n,usage:H.VERTEX|H.COPY_DST}),h=new q({data:i,label:"index-mesh-buffer",shrinkToFit:n,usage:H.INDEX|H.COPY_DST});super({attributes:{aPosition:{buffer:o,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:c,format:"float32x2",stride:2*4,offset:0}},indexBuffer:h,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};Ie.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let ae=Ie;function N(a,e){if(a.texture===M.WHITE&&!a.fill)return j.shared.setValue(a.color).toHex();if(a.fill){if(a.fill instanceof at){const t=a.fill,r=e.createPattern(t.texture.source.resource,"repeat"),s=t.transform.copyTo(A.shared);return s.scale(t.texture.frame.width,t.texture.frame.height),r.setTransform(s),r}else if(a.fill instanceof ot){const t=a.fill;if(t.type==="linear"){const r=e.createLinearGradient(t.x0,t.y0,t.x1,t.y1);return t.gradientStops.forEach(s=>{r.addColorStop(s.offset,j.shared.setValue(s.color).toHex())}),r}}}else{const t=e.createPattern(a.texture.source.resource,"repeat"),r=a.matrix.copyTo(A.shared);return r.scale(a.texture.frame.width,a.texture.frame.height),t.setTransform(r),t}return se("FillStyle not recognised",a),"red"}class De extends ct{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return k(G,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return k(G,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return k(G,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return k(G,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return k(G,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(e=!1){this.emit("destroy",this),this.removeAllListeners();for(const t in this.chars)this.chars[t].texture.destroy();this.chars=null,e&&(this.pages.forEach(t=>t.texture.destroy(!0)),this.pages=null)}}function We(a){if(a==="")return[];typeof a=="string"&&(a=[a]);const e=[];for(let t=0,r=a.length;t<r;t++){const s=a[t];if(Array.isArray(s)){if(s.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${s.length}.`);if(s[0].length===0||s[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const i=s[0].charCodeAt(0),n=s[1].charCodeAt(0);if(n<i)throw new Error("[BitmapFont]: Invalid character range.");for(let o=i,c=n;o<=c;o++)e.push(String.fromCharCode(o))}else e.push(...Array.from(s))}if(e.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}class pe extends De{constructor(e){super(),this.resolution=1,this.pages=[],this._padding=4,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const t=e,r=t.style.clone();t.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=M.WHITE,r._fill.fill=null);const s=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const i=te(r);t.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/s):r.fontSize=this.baseRenderedFontSize=s,this._style=r,this._skipKerning=t.skipKerning??!1,this.resolution=t.resolution??1,this._padding=t.padding??4,this.fontMetrics=I.measureFont(i),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(e){var g,m;const t=We(e).filter(_=>!this._currentChars.includes(_)).filter((_,x,T)=>T.indexOf(_)===x);if(!t.length)return;this._currentChars=[...this._currentChars,...t];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:s,context:i}=r.canvasAndContext,n=r.texture.source;const o=this._style;let c=this._currentX,h=this._currentY;const l=this.baseRenderedFontSize/this.baseMeasurementFontSize,d=this._padding*l,u=o.fontStyle==="italic"?2:1;let f=0,p=!1;for(let _=0;_<t.length;_++){const x=t[_],T=I.measureText(x,o,s,!1);T.lineHeight=T.height;const y=u*T.width*l,v=T.height*l,w=y+d*2,S=v+d*2;if(p=!1,x!==`
`&&x!=="\r"&&x!=="	"&&x!==" "&&(p=!0,f=Math.ceil(Math.max(S,f))),c+w>512&&(h+=f,f=S,c=0,h+f>512)){n.update();const z=this._nextPage();s=z.canvasAndContext.canvas,i=z.canvasAndContext.context,n=z.texture.source,h=0}const U=y/l-(((g=o.dropShadow)==null?void 0:g.distance)??0)-(((m=o._stroke)==null?void 0:m.width)??0);if(this.chars[x]={id:x.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:U,kerning:{}},p){this._drawGlyph(i,T,c+d,h+d,l,o);const z=n.width*l,W=n.height*l,E=new K(c/z*n.width,h/W*n.height,w/z*n.width,S/W*n.height);this.chars[x].texture=new M({source:n,frame:E}),c+=Math.ceil(w)}}n.update(),this._currentX=c,this._currentY=h,this._skipKerning&&this._applyKerning(t,i)}get pageTextures(){return k(G,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let s=0;s<e.length;s++){const i=e[s];for(let n=0;n<this._currentChars.length;n++){const o=this._currentChars[n];let c=r[i];c||(c=r[i]=t.measureText(i).width);let h=r[o];h||(h=r[o]=t.measureText(o).width);let l=t.measureText(i+o).width,d=l-(c+h);d&&(this.chars[i].kerning[o]=d),l=t.measureText(i+o).width,d=l-(c+h),d&&(this.chars[o].kerning[i]=d)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=D.getOptimalCanvasAndContext(512,512,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),s=new M({source:new lt({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload"})}),i={canvasAndContext:t,texture:s};return this.pages[this._currentPageIndex]=i,i}_setupContext(e,t,r){t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=te(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const s=t._stroke,i=(s==null?void 0:s.width)??0;if(s&&(e.lineWidth=i,e.lineJoin=s.join,e.miterLimit=s.miterLimit,e.strokeStyle=N(s,e)),t._fill&&(e.fillStyle=N(t._fill,e)),t.dropShadow){const n=t.dropShadow,o=j.shared.setValue(n.color).toArray(),c=n.blur*r,h=n.distance*r;e.shadowColor=`rgba(${o[0]*255},${o[1]*255},${o[2]*255},${n.alpha})`,e.shadowBlur=c,e.shadowOffsetX=Math.cos(n.angle)*h,e.shadowOffsetY=Math.sin(n.angle)*h}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,s,i,n){const o=t.text,c=t.fontProperties,h=n._stroke,l=((h==null?void 0:h.width)??0)*i,d=r+l/2,u=s-l/2,f=c.descent*i,p=t.lineHeight*i;n.stroke&&l&&e.strokeText(o,d,u+p-f),n._fill&&e.fillText(o,d,u+p-f)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];D.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}}function Oe(a,e,t){const r={width:0,height:0,offsetY:0,scale:e.fontSize/t.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};r.offsetY=t.baseLineOffset;let s=r.lines[0],i=null,n=!0;const o={spaceWord:!1,width:0,start:0,index:0,positions:[],chars:[]},c=f=>{const p=s.width;for(let g=0;g<o.index;g++){const m=f.positions[g];s.chars.push(f.chars[g]),s.charPositions.push(m+p)}s.width+=f.width,n=!1,o.width=0,o.index=0,o.chars.length=0},h=()=>{let f=s.chars.length-1,p=s.chars[f];for(;p===" ";)s.width-=t.chars[p].xAdvance,p=s.chars[--f];r.width=Math.max(r.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},n=!0,r.lines.push(s),r.height+=t.lineHeight},l=t.baseMeasurementFontSize/e.fontSize,d=e.letterSpacing*l,u=e.wordWrapWidth*l;for(let f=0;f<a.length+1;f++){let p;const g=f===a.length;g||(p=a[f]);const m=t.chars[p]||t.chars[" "];if(/(?:\s)/.test(p)||p==="\r"||p===`
`||g){if(!n&&e.wordWrap&&s.width+o.width-d>u?(h(),c(o),g||s.charPositions.push(0)):(o.start=s.width,c(o),g||s.charPositions.push(0)),p==="\r"||p===`
`)s.width!==0&&h();else if(!g){const y=m.xAdvance+(m.kerning[i]||0)+d;s.width+=y,s.spaceWidth=y,s.spacesIndex.push(s.charPositions.length),s.chars.push(p)}}else{const T=m.kerning[i]||0,y=m.xAdvance+T+d;o.positions[o.index++]=o.width+T,o.chars.push(p),o.width+=y}i=p}return h(),e.align==="center"?Mt(r):e.align==="right"?Rt(r):e.align==="justify"&&At(r),r}function Mt(a){for(let e=0;e<a.lines.length;e++){const t=a.lines[e],r=a.width/2-t.width/2;for(let s=0;s<t.charPositions.length;s++)t.charPositions[s]+=r}}function Rt(a){for(let e=0;e<a.lines.length;e++){const t=a.lines[e],r=a.width-t.width;for(let s=0;s<t.charPositions.length;s++)t.charPositions[s]+=r}}function At(a){const e=a.width;for(let t=0;t<a.lines.length;t++){const r=a.lines[t];let s=0,i=r.spacesIndex[s++],n=0;const o=r.spacesIndex.length,h=(e-r.width)/o;for(let l=0;l<r.charPositions.length;l++)l===i&&(i=r.spacesIndex[s++],n+=h),r.charPositions[l]+=n}}class Ut{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(e,t){var n;let r=`${t.fontFamily}-bitmap`,s=!0;if(t._fill.fill&&(r+=t._fill.fill.uid,s=!1),!F.has(r)){const o=new pe({style:t,overrideFill:s,overrideSize:!0,...this.defaultOptions});o.once("destroy",()=>F.remove(r)),F.set(r,o)}const i=F.get(r);return(n=i.ensureCharacters)==null||n.call(i,e),i}getLayout(e,t){const r=this.getFont(e,t);return Oe(e.split(""),t,r)}measureText(e,t){return this.getLayout(e,t)}install(...e){var h,l,d,u;let t=e[0];typeof t=="string"&&(t={name:t,style:e[1],chars:(h=e[2])==null?void 0:h.chars,resolution:(l=e[2])==null?void 0:l.resolution,padding:(d=e[2])==null?void 0:d.padding,skipKerning:(u=e[2])==null?void 0:u.skipKerning},k(G,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=t==null?void 0:t.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");t={...this.defaultOptions,...t};const s=t.style,i=s instanceof fe?s:new fe(s),n=i._fill.fill!==null&&i._fill.fill!==void 0,o=new pe({style:i,overrideFill:n,skipKerning:t.skipKerning,padding:t.padding,resolution:t.resolution,overrideSize:!1}),c=We(t.chars);return o.ensureCharacters(c.join("")),F.set(`${r}-bitmap`,o),o.once("destroy",()=>F.remove(`${r}-bitmap`)),o}uninstall(e){const t=`${e}-bitmap`,r=F.get(t);r&&(F.remove(t),r.destroy())}}const re=new Ut;class Le{constructor(e,t){this.state=Se.for2d(),this._graphicsBatchesHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],s=this.renderer.graphicsContext.updateGpuContext(t);return!!(s.isBatchable||r!==s.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e._didGraphicsUpdate&&(e._didGraphicsUpdate=!1,this._rebuild(e)),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const s=t[r];s.batcher.updateElement(s)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const i=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const n=i.resources.localUniforms.uniforms;n.uTransformMatrix=e.groupTransform,n.uRound=t._roundPixels|e._roundPixels,ne(e.groupColorAlpha,n.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,s=this._getBatchesForRenderable(e);for(let i=0;i<s.length;i++){const n=s[i];r.addToBatch(n,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),s=this.renderer._roundPixels|e._roundPixels,i=r.batches.map(n=>{const o=B.get(ht);return n.copyTo(o),o.renderable=e,o.roundPixels=s,o});return this._graphicsBatchesHash[e.uid]=i,e.on("destroyed",()=>{this.destroyRenderable(e)}),i}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach(t=>{B.return(t)}),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}Le.extension={type:[b.WebGLPipes,b.WebGPUPipes,b.CanvasPipes],name:"graphics"};const Ee=class Xe extends ae{constructor(...e){super({});let t=e[0]??{};typeof t=="number"&&(k(G,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){e={...Xe.defaultOptions,...e},this.verticesX=this.verticesX??e.verticesX,this.verticesY=this.verticesY??e.verticesY,this.width=this.width??e.width,this.height=this.height??e.height;const t=this.verticesX*this.verticesY,r=[],s=[],i=[],n=this.verticesX-1,o=this.verticesY-1,c=this.width/n,h=this.height/o;for(let d=0;d<t;d++){const u=d%this.verticesX,f=d/this.verticesX|0;r.push(u*c,f*h),s.push(u/n,f/o)}const l=n*o;for(let d=0;d<l;d++){const u=d%n,f=d/n|0,p=f*this.verticesX+u,g=f*this.verticesX+u+1,m=(f+1)*this.verticesX+u,_=(f+1)*this.verticesX+u+1;i.push(p,g,m,g,_,m)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(s),this.indexBuffer.data=new Uint32Array(i),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};Ee.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let kt=Ee;class oe{constructor(){this.batcher=null,this.batch=null,this.roundPixels=0,this._uvUpdateId=-1,this._textureMatrixUpdateId=-1}get blendMode(){return this.mesh.groupBlendMode}reset(){this.mesh=null,this.texture=null,this.batcher=null,this.batch=null}packIndex(e,t,r){const s=this.geometry.indices;for(let i=0;i<s.length;i++)e[t++]=s[i]+r}packAttributes(e,t,r,s){const i=this.mesh,n=this.geometry,o=i.groupTransform,c=s<<16|this.roundPixels&65535,h=o.a,l=o.b,d=o.c,u=o.d,f=o.tx,p=o.ty,g=n.positions,m=n.getBuffer("aUV"),_=m.data;let x=_;const T=this.texture.textureMatrix;T.isSimple||(x=this._transformedUvs,(this._textureMatrixUpdateId!==T._updateID||this._uvUpdateId!==m._updateID)&&((!x||x.length<_.length)&&(x=this._transformedUvs=new Float32Array(_.length)),this._textureMatrixUpdateId=T._updateID,this._uvUpdateId=m._updateID,T.multiplyUvs(_,x)));const y=i.groupColorAlpha;for(let v=0;v<g.length;v+=2){const w=g[v],S=g[v+1];e[r]=h*w+d*S+f,e[r+1]=l*w+u*S+p,e[r+2]=x[v],e[r+3]=x[v+1],t[r+4]=y,t[r+5]=c,r+=6}}get vertexSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class Ye{constructor(e,t){this.localUniforms=new L({uTransformMatrix:{value:new A,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new we({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,s=e.batched;if(t.batched=s,r!==s)return!0;if(s){const i=e._geometry;if(i.indices.length!==t.indexSize||i.positions.length!==t.vertexSize)return t.indexSize=i.indices.length,t.vertexSize=i.positions.length,!0;const n=this._getBatchableMesh(e),o=e.texture;if(n.texture._source!==o._source&&n.texture._source!==o._source)return!n.batcher.checkAndUpdateTexture(n,o)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:s}=this._getMeshData(e);if(s){const i=this._getBatchableMesh(e);i.texture=e._texture,i.geometry=e._geometry,r.addToBatch(i)}else r.break(t),t.add({renderPipeId:"mesh",mesh:e})}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.texture=e._texture,t.geometry=e._geometry,t.batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];t&&(B.return(t),this._gpuBatchableMeshHash[e.uid]=null)}execute({mesh:e}){if(!e.isRenderable)return;e.state.blendMode=e.groupBlendMode;const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),ne(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){var t,r;return this._meshDataHash[e.uid]={batched:e.batched,indexSize:(t=e._geometry.indices)==null?void 0:t.length,vertexSize:(r=e._geometry.positions)==null?void 0:r.length},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=B.get(oe);return t.mesh=e,t.texture=e._texture,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t.mesh=e,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&B.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}Ye.extension={type:[b.WebGLPipes,b.WebGPUPipes,b.CanvasPipes],name:"mesh"};const je=class Ke extends kt{constructor(e={}){e={...Ke.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this.update(e)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,t=this._leftWidth+this._rightWidth,r=this.width>t?1:this.width/t,s=this._topHeight+this._bottomHeight,i=this.height>s?1:this.height/s,n=Math.min(r,i);e[9]=e[11]=e[13]=e[15]=this._topHeight*n,e[17]=e[19]=e[21]=e[23]=this.height-this._bottomHeight*n,e[25]=e[27]=e[29]=e[31]=this.height,e[2]=e[10]=e[18]=e[26]=this._leftWidth*n,e[4]=e[12]=e[20]=e[28]=this.width-this._rightWidth*n,e[6]=e[14]=e[22]=e[30]=this.width,this.getBuffer("aPosition").update()}updateUvs(){const e=this.uvs;e[0]=e[8]=e[16]=e[24]=0,e[1]=e[3]=e[5]=e[7]=0,e[6]=e[14]=e[22]=e[30]=1,e[25]=e[27]=e[29]=e[31]=1;const t=1/this._originalWidth,r=1/this._originalHeight;e[2]=e[10]=e[18]=e[26]=t*this._leftWidth,e[9]=e[11]=e[13]=e[15]=r*this._topHeight,e[4]=e[12]=e[20]=e[28]=1-t*this._rightWidth,e[17]=e[19]=e[21]=e[23]=1-r*this._bottomHeight,this.getBuffer("aUV").update()}};je.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let Gt=je;class Ne{constructor(e){this._gpuSpriteHash=Object.create(null),this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e._didSpriteUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e._didSpriteUpdate&&this._updateBatchableSprite(e,t),t.batcher.updateElement(t)}validateRenderable(e){const t=e._texture,r=this._getGpuSprite(e);return r.texture._source!==t._source?!r.batcher.checkAndUpdateTexture(r,t):!1}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];B.return(t),this._gpuSpriteHash[e.uid]=null}_updateBatchableSprite(e,t){e._didSpriteUpdate=!1,t.geometry.update(e),t.texture=e._texture}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=new oe;return t.geometry=new Gt,t.mesh=e,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}Ne.extension={type:[b.WebGLPipes,b.WebGPUPipes,b.CanvasPipes],name:"nineSliceSprite"};const zt={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},It={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let J,Q;class Ht extends Ce{constructor(){J??(J=Be({name:"tiling-sprite-shader",bits:[pt,zt,Fe]})),Q??(Q=Pe({name:"tiling-sprite-shader",bits:[gt,It,Me]}));const e=new L({uMapCoord:{value:new A,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new A,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:Q,gpuProgram:J,resources:{localUniforms:new L({uTransformMatrix:{value:new A,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:M.EMPTY.source,uSampler:M.EMPTY.source.style}})}updateUniforms(e,t,r,s,i,n){const o=this.resources.tilingUniforms,c=n.width,h=n.height,l=n.textureMatrix,d=o.uniforms.uTextureTransform;d.set(r.a*c/e,r.b*c/t,r.c*h/e,r.d*h/t,r.tx/e,r.ty/t),d.invert(),o.uniforms.uMapCoord=l.mapCoord,o.uniforms.uClampFrame=l.uClampFrame,o.uniforms.uClampOffset=l.uClampOffset,o.uniforms.uTextureTransform=d,o.uniforms.uSizeAnchor[0]=e,o.uniforms.uSizeAnchor[1]=t,o.uniforms.uSizeAnchor[2]=s,o.uniforms.uSizeAnchor[3]=i,n&&(this.resources.uTexture=n.source,this.resources.uSampler=n.source.style)}}class Dt extends ae{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function Wt(a,e){const t=a.anchor.x,r=a.anchor.y;e[0]=-t*a.width,e[1]=-r*a.height,e[2]=(1-t)*a.width,e[3]=-r*a.height,e[4]=(1-t)*a.width,e[5]=(1-r)*a.height,e[6]=-t*a.width,e[7]=(1-r)*a.height}function Ot(a,e,t,r){let s=0;const i=a.length/(e||2),n=r.a,o=r.b,c=r.c,h=r.d,l=r.tx,d=r.ty;for(t*=e;s<i;){const u=a[t],f=a[t+1];a[t]=n*u+c*f+l,a[t+1]=o*u+h*f+d,t+=e,s++}}function Lt(a,e){const t=a.texture,r=t.frame.width,s=t.frame.height;let i=0,n=0;a._applyAnchorToTexture&&(i=a.anchor.x,n=a.anchor.y),e[0]=e[6]=-i,e[2]=e[4]=1-i,e[1]=e[3]=-n,e[5]=e[7]=1-n;const o=A.shared;o.copyFrom(a._tileTransform.matrix),o.tx/=a.width,o.ty/=a.height,o.invert(),o.scale(a.width/r,a.height/s),Ot(e,2,0,o)}const X=new Dt;class $e{constructor(e){this._tilingSpriteDataHash=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const s=t.canBatch;if(s&&s===r){const{batchableMesh:i}=t;if(i.texture._source!==e.texture._source)return!i.batcher.checkAndUpdateTexture(i,e.texture)}return r!==s}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const s=this._getTilingSpriteData(e),{geometry:i,canBatch:n}=s;if(n){s.batchableMesh||(s.batchableMesh=new oe);const o=s.batchableMesh;e._didTilingSpriteUpdate&&(e._didTilingSpriteUpdate=!1,this._updateBatchableMesh(e),o.geometry=i,o.mesh=e,o.texture=e._texture),o.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(o)}else r.break(t),s.shader||(s.shader=new Ht),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,ne(e.groupColorAlpha,r.uColor,0),this._renderer.encoder.draw({geometry:X,shader:t,state:Se.default2d})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:s}=t;e._didTilingSpriteUpdate&&this._updateBatchableMesh(e),s.batcher.updateElement(s)}else if(e._didTilingSpriteUpdate){const{shader:s}=t;s.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}e._didTilingSpriteUpdate=!1}destroyRenderable(e){var r;const t=this._getTilingSpriteData(e);t.batchableMesh=null,(r=t.shader)==null||r.destroy(),this._tilingSpriteDataHash[e.uid]=null}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new ae({indices:X.indices,positions:X.positions.slice(),uvs:X.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,s=e.texture.source.style;s.addressMode!=="repeat"&&(s.addressMode="repeat",s.update()),Lt(e,r.uvs),Wt(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let s=!0;return this._renderer.type===ie.WEBGL&&(s=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(s||r.source.isPowerOfTwo),t.canBatch}}$e.extension={type:[b.WebGLPipes,b.WebGPUPipes,b.CanvasPipes],name:"tilingSprite"};const Z={test(a){return typeof a=="string"&&a.startsWith("info face=")},parse(a){const e=a.match(/^[a-z]+\s+.+$/gm),t={info:[],common:[],page:[],char:[],chars:[],kerning:[],kernings:[],distanceField:[]};for(const d in e){const u=e[d].match(/^[a-z]+/gm)[0],f=e[d].match(/[a-zA-Z]+=([^\s"']+|"([^"]*)")/gm),p={};for(const g in f){const m=f[g].split("="),_=m[0],x=m[1].replace(/"/gm,""),T=parseFloat(x),y=isNaN(T)?x:T;p[_]=y}t[u].push(p)}const r={chars:{},pages:[],lineHeight:0,fontSize:0,fontFamily:"",distanceField:null,baseLineOffset:0},[s]=t.info,[i]=t.common,[n]=t.distanceField??[];n&&(r.distanceField={range:parseInt(n.distanceRange,10),type:n.fieldType}),r.fontSize=parseInt(s.size,10),r.fontFamily=s.face,r.lineHeight=parseInt(i.lineHeight,10);const o=t.page;for(let d=0;d<o.length;d++)r.pages.push({id:parseInt(o[d].id,10)||0,file:o[d].file});const c={};r.baseLineOffset=r.lineHeight-parseInt(i.base,10);const h=t.char;for(let d=0;d<h.length;d++){const u=h[d],f=parseInt(u.id,10);let p=u.letter??u.char??String.fromCharCode(f);p==="space"&&(p=" "),c[f]=p,r.chars[p]={id:f,page:parseInt(u.page,10)||0,x:parseInt(u.x,10),y:parseInt(u.y,10),width:parseInt(u.width,10),height:parseInt(u.height,10),xOffset:parseInt(u.xoffset,10),yOffset:parseInt(u.yoffset,10),xAdvance:parseInt(u.xadvance,10),kerning:{}}}const l=t.kerning||[];for(let d=0;d<l.length;d++){const u=parseInt(l[d].first,10),f=parseInt(l[d].second,10),p=parseInt(l[d].amount,10);r.chars[c[f]].kerning[c[u]]=p}return r}},ge={test(a){const e=a;return typeof e!="string"&&"getElementsByTagName"in e&&e.getElementsByTagName("page").length&&e.getElementsByTagName("info")[0].getAttribute("face")!==null},parse(a){const e={chars:{},pages:[],lineHeight:0,fontSize:0,fontFamily:"",distanceField:null,baseLineOffset:0},t=a.getElementsByTagName("info")[0],r=a.getElementsByTagName("common")[0],s=a.getElementsByTagName("distanceField")[0];s&&(e.distanceField={type:s.getAttribute("fieldType"),range:parseInt(s.getAttribute("distanceRange"),10)});const i=a.getElementsByTagName("page"),n=a.getElementsByTagName("char"),o=a.getElementsByTagName("kerning");e.fontSize=parseInt(t.getAttribute("size"),10),e.fontFamily=t.getAttribute("face"),e.lineHeight=parseInt(r.getAttribute("lineHeight"),10);for(let h=0;h<i.length;h++)e.pages.push({id:parseInt(i[h].getAttribute("id"),10)||0,file:i[h].getAttribute("file")});const c={};e.baseLineOffset=e.lineHeight-parseInt(r.getAttribute("base"),10);for(let h=0;h<n.length;h++){const l=n[h],d=parseInt(l.getAttribute("id"),10);let u=l.getAttribute("letter")??l.getAttribute("char")??String.fromCharCode(d);u==="space"&&(u=" "),c[d]=u,e.chars[u]={id:d,page:parseInt(l.getAttribute("page"),10)||0,x:parseInt(l.getAttribute("x"),10),y:parseInt(l.getAttribute("y"),10),width:parseInt(l.getAttribute("width"),10),height:parseInt(l.getAttribute("height"),10),xOffset:parseInt(l.getAttribute("xoffset"),10),yOffset:parseInt(l.getAttribute("yoffset"),10),xAdvance:parseInt(l.getAttribute("xadvance"),10),kerning:{}}}for(let h=0;h<o.length;h++){const l=parseInt(o[h].getAttribute("first"),10),d=parseInt(o[h].getAttribute("second"),10),u=parseInt(o[h].getAttribute("amount"),10);e.chars[c[d]].kerning[c[l]]=u}return e}},me={test(a){return typeof a=="string"&&a.includes("<font>")?ge.test(O.get().parseXML(a)):!1},parse(a){return ge.parse(O.get().parseXML(a))}};class qe extends De{constructor(e,t){super();const{textures:r,data:s}=e;Object.keys(s.pages).forEach(i=>{const n=s.pages[parseInt(i,10)],o=r[n.id];this.pages.push({texture:o})}),Object.keys(s.chars).forEach(i=>{const n=s.chars[i],o=r[n.page].source,c=new K(n.x,n.y,n.width,n.height),h=new M({source:o,frame:c});this.chars[i]={id:i.codePointAt(0),xOffset:n.xOffset,yOffset:n.yOffset,xAdvance:n.xAdvance,kerning:n.kerning??{},texture:h}}),this.baseRenderedFontSize=s.fontSize,this.baseMeasurementFontSize=s.fontSize,this.fontMetrics={ascent:0,descent:0,fontSize:s.fontSize},this.baseLineOffset=s.baseLineOffset,this.lineHeight=s.lineHeight,this.fontFamily=s.fontFamily,this.distanceField=s.distanceField??{type:"none",range:0},this.url=t}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{texture:t}=this.pages[e];t.destroy(!0)}this.pages=null}static install(e){re.install(e)}static uninstall(e){re.uninstall(e)}}const Et=[".xml",".fnt"],Xt={extension:b.CacheParser,test:a=>a instanceof qe,getCacheableAssets(a,e){const t={};return a.forEach(r=>{t[r]=e}),t[`${e.fontFamily}-bitmap`]=e,t}},Yt={extension:{type:b.LoadParser,priority:dt.Normal},test(a){return Et.includes(V.extname(a).toLowerCase())},async testParse(a){return Z.test(a)||me.test(a)},async parse(a,e,t){const r=Z.test(a)?Z.parse(a):me.parse(a),{src:s}=e,{pages:i}=r,n=[];for(let l=0;l<i.length;++l){const d=i[l].file;let u=V.join(V.dirname(s),d);u=ut(u,s),n.push(u)}const o=await t.load(n),c=n.map(l=>o[l]);return new qe({data:r,textures:c},s)},async load(a,e){return await(await O.get().fetch(a)).text()},async unload(a,e,t){await Promise.all(a.pages.map(r=>t.unload(r.texture.source._sourceOrigin))),a.destroy()}},jt={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vColor * calculateMSDFAlpha(outColor, localUniforms.uDistance);
        `}},Kt={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vColor * calculateMSDFAlpha(outColor, uDistance);
        `}},Nt={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                return alpha;
            }
        `}},$t={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                return alpha;
            }
        `}};class qt extends Ce{constructor(){const e=new L({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new A,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=Be({name:"sdf-shader",bits:[mt,xt(de),jt,Nt,Fe]}),r=Pe({name:"sdf-shader",bits:[_t,bt(de),Kt,$t,Me]});super({glProgram:r,gpuProgram:t,resources:{localUniforms:e,batchSamplers:yt}})}}class Ve{constructor(e){this._gpuBitmapText={},this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);xe(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){B.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);xe(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){var f;const{context:r}=t,s=re.getFont(e.text,e._style);r.clear(),s.distanceField.type!=="none"&&(r.customShader||(this._sdfShader||(this._sdfShader=new qt),r.customShader=this._sdfShader));const i=Array.from(e.text),n=e._style;let o=(((f=n._stroke)==null?void 0:f.width)||0)/2;o+=s.baseLineOffset;const c=Oe(i,n,s);let h=0;const l=n.padding,d=c.scale;r.translate(-e._anchor._x*c.width-l,-e._anchor._y*(c.height+c.offsetY)-l).scale(d,d);const u=n._fill.color;for(let p=0;p<c.lines.length;p++){const g=c.lines[p];for(let m=0;m<g.charPositions.length;m++){const _=i[h++],x=s.chars[_];x!=null&&x.texture&&r.texture(x.texture,u||"black",Math.round(g.charPositions[m]+x.xOffset),Math.round(o+x.yOffset))}o+=s.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=B.get(Tt);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",()=>{this.destroyRenderable(e)}),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,s=F.get(`${r}-bitmap`),{a:i,b:n,c:o,d:c}=e.groupTransform,h=Math.sqrt(i*i+n*n),l=Math.sqrt(o*o+c*c),d=(Math.abs(h)+Math.abs(l))/2,u=s.baseRenderedFontSize/e._style.fontSize,f=e.resolution??this._renderer.resolution,p=d*s.distanceField.range*(1/u)*f;t.customShader.resources.localUniforms.uniforms.uDistance=p}destroy(){var e;for(const t in this._gpuBitmapText)this._destroyRenderableByUid(t);this._gpuBitmapText=null,(e=this._sdfShader)==null||e.destroy(!0),this._sdfShader=null,this._renderer=null}}Ve.extension={type:[b.WebGLPipes,b.WebGPUPipes,b.CanvasPipes],name:"bitmapText"};function xe(a,e){e.groupTransform=a.groupTransform,e.groupColorAlpha=a.groupColorAlpha,e.groupColor=a.groupColor,e.groupBlendMode=a.groupBlendMode,e.globalDisplayStatus=a.globalDisplayStatus,e.groupTransform=a.groupTransform,e.localDisplayStatus=a.localDisplayStatus,e.groupAlpha=a.groupAlpha,e._roundPixels=a._roundPixels}class Je{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),B.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch(n=>{console.error(n)}),e._didTextUpdate=!1;const i=e._style.padding;ee(s.bounds,e._anchor,s.texture,i)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const s=e.resolution??this._renderer.resolution,i=await this._renderer.htmlText.getManagedTexture(e.text,s,e._style,e._getKey()),n=t.batchableSprite;n.texture=t.texture=i,t.generatingTexture=!1,t.textureNeedsUploading=!0,e.onViewUpdate();const o=e._style.padding;ee(n.bounds,e._anchor,n.texture,o)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:M.EMPTY,currentKey:"--",batchableSprite:B.get(Re),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.texture=M.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}Je.extension={type:[b.WebGLPipes,b.WebGPUPipes,b.CanvasPipes],name:"htmlText"};function Vt(){const{userAgent:a}=O.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(a)}const Jt=new ve;function Qe(a,e,t,r){const s=Jt;s.minX=0,s.minY=0,s.maxX=a.width/r|0,s.maxY=a.height/r|0;const i=R.getOptimalTexture(s.width,s.height,r,!1);return i.source.uploadMethodId="image",i.source.resource=a,i.source.alphaMode="premultiply-alpha-on-upload",i.frame.width=e/r,i.frame.height=t/r,i.source.emit("update",i.source),i.updateUvs(),i}function Qt(a,e){const t=e.fontFamily,r=[],s={},i=/font-family:([^;"\s]+)/g,n=a.match(i);function o(c){s[c]||(r.push(c),s[c]=!0)}if(Array.isArray(t))for(let c=0;c<t.length;c++)o(t[c]);else o(t);n&&n.forEach(c=>{const h=c.split(":")[1].trim();o(h)});for(const c in e.tagStyles){const h=e.tagStyles[c].fontFamily;o(h)}return r}async function Zt(a){const t=await(await O.get().fetch(a)).blob(),r=new FileReader;return await new Promise((i,n)=>{r.onloadend=()=>i(r.result),r.onerror=n,r.readAsDataURL(t)})}async function _e(a,e){const t=await Zt(e);return`@font-face {
        font-family: "${a.fontFamily}";
        src: url('${t}');
        font-weight: ${a.fontWeight};
        font-style: ${a.fontStyle};
    }`}const Y=new Map;async function er(a,e,t){const r=a.filter(s=>F.has(`${s}-and-url`)).map((s,i)=>{if(!Y.has(s)){const{url:n}=F.get(`${s}-and-url`);i===0?Y.set(s,_e(e,n)):Y.set(s,_e({fontWeight:t.fontWeight,fontStyle:t.fontStyle,fontFamily:s},n))}return Y.get(s)});return(await Promise.all(r)).join(`
`)}function tr(a,e,t,r,s){const{domElement:i,styleElement:n,svgRoot:o}=s;i.innerHTML=`<style>${e.cssStyle}</style><div>${a}</div>`,i.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),n.textContent=r;const{width:c,height:h}=s.image;return o.setAttribute("width",c.toString()),o.setAttribute("height",h.toString()),new XMLSerializer().serializeToString(o)}function rr(a,e){const t=D.getOptimalCanvasAndContext(a.width,a.height,e),{context:r}=t;return r.clearRect(0,0,a.width,a.height),r.drawImage(a,0,0),D.returnCanvasAndContext(t),t.canvas}function sr(a,e,t){return new Promise(async r=>{t&&await new Promise(s=>setTimeout(s,100)),a.onload=()=>{r()},a.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,a.crossOrigin="anonymous"})}class ce{constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===ie.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,s){if(this._activeTextures[s])return this._increaseReferenceCount(s),this._activeTextures[s].promise;const i=this._buildTexturePromise(e,t,r).then(n=>(this._activeTextures[s].texture=n,n));return this._activeTextures[s]={texture:null,promise:i,usageCount:1},i}async _buildTexturePromise(e,t,r){const s=B.get(wt),i=Qt(e,r),n=await er(i,r,vt.defaultTextStyle),o=St(e,r,n,s),c=Math.ceil(Math.ceil(Math.max(1,o.width)+r.padding*2)*t),h=Math.ceil(Math.ceil(Math.max(1,o.height)+r.padding*2)*t),l=s.image;l.width=c|0,l.height=h|0;const d=tr(e,r,t,n,s);await sr(l,d,Vt()&&i.length>0);let u=l;this._createCanvas&&(u=rr(l,t));const f=Qe(u,l.width,l.height,t);return this._createCanvas&&this._renderer.texture.initSource(f.source),B.return(s),f}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,t.usageCount===0&&(t.texture?this._cleanUp(t):t.promise.then(r=>{t.texture=r,this._cleanUp(t)}).catch(()=>{se("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}_cleanUp(e){R.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}ce.extension={type:[b.WebGLSystem,b.WebGPUSystem,b.CanvasSystem],name:"htmlText"};ce.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};class Ze{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();if(t.currentKey!==r){const s=e.resolution??this._renderer.resolution,{width:i,height:n}=this._renderer.canvasText.getTextureSize(e.text,s,e._style);return!(this._renderer.canvasText.getReferenceCount(t.currentKey)===1&&i===t.texture._source.width&&n===t.texture._source.height)}return!1}addRenderable(e,t){const s=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(s)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),B.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1;const i=e._style.padding;ee(s.bounds,e._anchor,s.texture,i)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey);const s=e.resolution??this._renderer.resolution;t.texture=r.texture=this._renderer.canvasText.getTexture(e.text,s,e._style,e._getKey()),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:B.get(Re)};return t.batchableSprite.renderable=e,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,this._updateText(e),e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}Ze.extension={type:[b.WebGLPipes,b.WebGPUPipes,b.CanvasPipes],name:"text"};function be(a,e,t){for(let r=0,s=4*t*e;r<e;++r,s+=4)if(a[s+3]!==0)return!1;return!0}function Te(a,e,t,r,s){const i=4*e;for(let n=r,o=r*i+4*t;n<=s;++n,o+=i)if(a[o+3]!==0)return!1;return!0}function ir(a,e=1){const{width:t,height:r}=a,s=a.getContext("2d",{willReadFrequently:!0});if(s===null)throw new TypeError("Failed to get canvas 2D context");const n=s.getImageData(0,0,t,r).data;let o=0,c=0,h=t-1,l=r-1;for(;c<r&&be(n,t,c);)++c;if(c===r)return K.EMPTY;for(;be(n,t,l);)--l;for(;Te(n,t,o,c,l);)++o;for(;Te(n,t,h,c,l);)--h;return++h,++l,new K(o/e,c/e,(h-o)/e,(l-c)/e)}class et{constructor(){this._activeTextures={}}getTextureSize(e,t,r){const s=I.measureText(e||" ",r);let i=Math.ceil(Math.ceil(Math.max(1,s.width)+r.padding*2)*t),n=Math.ceil(Math.ceil(Math.max(1,s.height)+r.padding*2)*t);return i=Math.ceil(i-1e-6),n=Math.ceil(n-1e-6),i=ue(i),n=ue(n),{width:i,height:n}}getTexture(e,t,r,s){if(this._activeTextures[s])return this._increaseReferenceCount(s),this._activeTextures[s].texture;const i=I.measureText(e||" ",r),n=Math.ceil(Math.ceil(Math.max(1,i.width)+r.padding*2)*t),o=Math.ceil(Math.ceil(Math.max(1,i.height)+r.padding*2)*t),c=D.getOptimalCanvasAndContext(n,o),{canvas:h}=c;this.renderTextToCanvas(e,r,t,c);const l=Qe(h,n,o,t);if(r.trim){const d=ir(h,t);l.frame.copyFrom(d),l.updateUvs()}return this._activeTextures[s]={canvasAndContext:c,texture:l,usageCount:1},l}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];if(t.usageCount--,t.usageCount===0){D.returnCanvasAndContext(t.canvasAndContext),R.returnTexture(t.texture);const r=t.texture.source;r.resource=null,r.uploadMethodId="unknown",r.alphaMode="no-premultiply-alpha",this._activeTextures[e]=null}}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,s){var x,T,y,v;const{canvas:i,context:n}=s,o=te(t),c=I.measureText(e||" ",t),h=c.lines,l=c.lineHeight,d=c.lineWidths,u=c.maxLineWidth,f=c.fontProperties,p=i.height;if(n.resetTransform(),n.scale(r,r),n.clearRect(0,0,c.width+4,c.height+4),(x=t._stroke)!=null&&x.width){const w=t._stroke;n.lineWidth=w.width,n.miterLimit=w.miterLimit,n.lineJoin=w.join,n.lineCap=w.cap}n.font=o;let g,m;const _=t.dropShadow?2:1;for(let w=0;w<_;++w){const S=t.dropShadow&&w===0,U=S?Math.ceil(Math.max(1,p)+t.padding*2):0,z=U*r;if(S){n.fillStyle="black",n.strokeStyle="black";const C=t.dropShadow,tt=C.color,rt=C.alpha;n.shadowColor=j.shared.setValue(tt).setAlpha(rt).toRgbaString();const st=C.blur*r,le=C.distance*r;n.shadowBlur=st,n.shadowOffsetX=Math.cos(C.angle)*le,n.shadowOffsetY=Math.sin(C.angle)*le+z}else n.globalAlpha=((T=t._fill)==null?void 0:T.alpha)??1,n.fillStyle=t._fill?N(t._fill,n):null,(y=t._stroke)!=null&&y.width&&(n.strokeStyle=N(t._stroke,n)),n.shadowColor="black";let W=(l-f.fontSize)/2;l-f.fontSize<0&&(W=0);const E=((v=t._stroke)==null?void 0:v.width)??0;for(let C=0;C<h.length;C++)g=E/2,m=E/2+C*l+f.ascent+W,t.align==="right"?g+=u-d[C]:t.align==="center"&&(g+=(u-d[C])/2),t._stroke&&this._drawLetterSpacing(h[C],t,s,g+t.padding,m+t.padding-U,!0),t._fill!==void 0&&this._drawLetterSpacing(h[C],t,s,g+t.padding,m+t.padding-U)}}_drawLetterSpacing(e,t,r,s,i,n=!1){const{context:o}=r,c=t.letterSpacing;let h=!1;if(I.experimentalLetterSpacingSupported&&(I.experimentalLetterSpacing?(o.letterSpacing=`${c}px`,o.textLetterSpacing=`${c}px`,h=!0):(o.letterSpacing="0px",o.textLetterSpacing="0px")),c===0||h){n?o.strokeText(e,s,i):o.fillText(e,s,i);return}let l=s;const d=I.graphemeSegmenter(e);let u=o.measureText(e).width,f=0;for(let p=0;p<d.length;++p){const g=d[p];n?o.strokeText(g,l,i):o.fillText(g,l,i);let m="";for(let _=p+1;_<d.length;++_)m+=d[_];f=o.measureText(m).width,l+=u-f+c,u=f}}destroy(){this._activeTextures=null}}et.extension={type:[b.WebGLSystem,b.WebGPUSystem,b.CanvasSystem],name:"canvasText"};P.add(Ae);P.add(Ue);P.add(Le);P.add(ft);P.add(Ye);P.add(et);P.add(Ze);P.add(Ve,Yt,Xt);P.add(ce);P.add(Je);P.add($e);P.add(Ne);P.add(ze);P.add(ke);
