import{k as l,C as _,l as p,d as a,v as u,T as f}from"./index-19f7f59e.js";import{S as x}from"./State-93d76a17.js";import{M as w}from"./MeshGeometry-8e968a44.js";const c=new l;class M extends _{constructor(...e){let t=e[0];t instanceof p&&(a(u,"Mesh: use new Mesh({ geometry, shader }) instead"),t={geometry:t,shader:e[1]},e[3]&&(a(u,"Mesh: drawMode argument has been removed, use geometry.topology instead"),t.geometry.topology=e[3]));const{geometry:i,shader:s,texture:r,roundPixels:o,state:h,...d}=t;super({label:"Mesh",...d}),this.renderPipeId="mesh",this.canBundle=!0,this._roundPixels=0,this.allowChildren=!1,this.shader=s,this.texture=r??(s==null?void 0:s.texture)??f.WHITE,this.state=h??x.for2d(),this._geometry=i,this._geometry.on("update",this.onViewUpdate,this),this.roundPixels=o??!1}get roundPixels(){return!!this._roundPixels}set roundPixels(e){this._roundPixels=e?1:0}get material(){return a(u,"mesh.material property has been removed, use mesh.shader instead"),this._shader}set shader(e){this._shader!==e&&(this._shader=e,this.onViewUpdate())}get shader(){return this._shader}set geometry(e){var t;this._geometry!==e&&((t=this._geometry)==null||t.off("update",this.onViewUpdate,this),e.on("update",this.onViewUpdate,this),this._geometry=e,this.onViewUpdate())}get geometry(){return this._geometry}set texture(e){e||(e=f.EMPTY);const t=this._texture;t!==e&&(t&&t.dynamic&&t.off("update",this.onViewUpdate,this),e.dynamic&&e.on("update",this.onViewUpdate,this),this.shader&&(this.shader.texture=e),this._texture=e,this.onViewUpdate())}get texture(){return this._texture}get batched(){return this._shader?!1:this._geometry instanceof w?this._geometry.batchMode==="auto"?this._geometry.positions.length/2<=100:this._geometry.batchMode==="batch":!1}get bounds(){return this._geometry.bounds}addBounds(e){e.addBounds(this.geometry.bounds)}containsPoint(e){const{x:t,y:i}=e;if(!this.bounds.containsPoint(t,i))return!1;const s=this.geometry.getBuffer("aPosition").data,r=c.points,o=this.geometry.getIndex().data,h=o.length,d=this.geometry.topology==="triangle-strip"?3:1;for(let n=0;n+2<h;n+=d){const m=o[n]*2,y=o[n+1]*2,g=o[n+2]*2;if(r[0]=s[m],r[1]=s[m+1],r[2]=s[y],r[3]=s[y+1],r[4]=s[g],r[5]=s[g+1],c.contains(t,i))return!0}return!1}onViewUpdate(){this._didChangeId+=1<<12,!this.didViewUpdate&&(this.didViewUpdate=!0,this.renderGroup&&this.renderGroup.onChildViewUpdate(this))}destroy(e){var i;if(super.destroy(e),typeof e=="boolean"?e:e==null?void 0:e.texture){const s=typeof e=="boolean"?e:e==null?void 0:e.textureSource;this._texture.destroy(s)}(i=this._geometry)==null||i.off("update",this.onViewUpdate,this),this._texture=null,this._geometry=null,this._shader=null}}export{M};
